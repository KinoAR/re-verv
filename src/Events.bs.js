// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var VBase$ReVerv = require("./VBase.bs.js");
var PhaserAPI$ReVerv = require("./PhaserAPI.bs.js");

function EventEmitter(E) {
  var PEEmitter = PhaserAPI$ReVerv.Events[/* EventEmitter */0](/* module */[]);
  var emit0 = function (eventName) {
    return (function (param) {
        return VBase$ReVerv.flatMap((function (__x) {
                      return __x.emit(eventName);
                    }), param);
      });
  };
  var emit1 = function (eventName, arg1) {
    return (function (param) {
        return VBase$ReVerv.flatMap((function (__x) {
                      return __x.emit(eventName, arg1);
                    }), param);
      });
  };
  var emit2 = function (eventName, arg1, arg2) {
    return (function (param) {
        return VBase$ReVerv.flatMap((function (__x) {
                      return __x.emit(eventName, arg1, arg2);
                    }), param);
      });
  };
  var destroy = function (param) {
    return VBase$ReVerv.flatMap((function (prim) {
                  prim.destroy();
                  return /* () */0;
                }), param);
  };
  var shutdown = function (param) {
    return VBase$ReVerv.flatMap((function (prim) {
                  prim.shutdown();
                  return /* () */0;
                }), param);
  };
  var eventNames = function (param) {
    return VBase$ReVerv.flatMap((function (prim) {
                  return prim.eventNames();
                }), param);
  };
  var offStr = function (eventName) {
    return (function (param) {
        return VBase$ReVerv.map((function (__x) {
                      return __x.off(eventName);
                    }), param);
      });
  };
  var addEventListener = function (eventName, fn) {
    return (function (param) {
        return VBase$ReVerv.map((function (__x) {
                      return (function (param) {
                          return __x.addEventListener(eventName, fn, param);
                        });
                    }), param);
      });
  };
  var on = function (eventName, fn) {
    return (function (param) {
        return VBase$ReVerv.map((function (__x) {
                      return (function (param) {
                          return __x.on(eventName, fn, param);
                        });
                    }), param);
      });
  };
  var off = function (eventName, fn) {
    return (function (param) {
        return VBase$ReVerv.map((function (__x) {
                      return (function (param, param$1) {
                          return __x.on(eventName, fn, param, param$1);
                        });
                    }), param);
      });
  };
  var listeners = function (eventName) {
    return (function (param) {
        return VBase$ReVerv.map((function (__x) {
                      return __x.listeners(eventName);
                    }), param);
      });
  };
  var removeAllListeners = function (param) {
    return VBase$ReVerv.map((function (prim) {
                  return prim.removeAllListeners();
                }), param);
  };
  var removeAllListenersStr = function (eventName) {
    return (function (param) {
        return VBase$ReVerv.map((function (__x) {
                      return __x.removeAllListeners(eventName);
                    }), param);
      });
  };
  var removeListenerStr = function (eventName) {
    return (function (param) {
        return VBase$ReVerv.map((function (__x) {
                      return __x.removeLIstener(eventName);
                    }), param);
      });
  };
  return /* module */[
          /* PEEmitter */PEEmitter,
          /* emit0 */emit0,
          /* emit1 */emit1,
          /* emit2 */emit2,
          /* destroy */destroy,
          /* shutdown */shutdown,
          /* eventNames */eventNames,
          /* offStr */offStr,
          /* addEventListener */addEventListener,
          /* on */on,
          /* off */off,
          /* listeners */listeners,
          /* removeAllListeners */removeAllListeners,
          /* removeAllListenersStr */removeAllListenersStr,
          /* removeListenerStr */removeListenerStr
        ];
}

exports.EventEmitter = EventEmitter;
/* No side effect */
