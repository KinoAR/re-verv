// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var VBase$ReVerv = require("./VBase.bs.js");
var Events$ReVerv = require("./Events.bs.js");

function isUp(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.isUp;
              }), param);
}

function isDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.isDown;
              }), param);
}

function keyCode(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.keyCode;
              }), param);
}

function $$location(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.location;
              }), param);
}

function shiftKey(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.shiftKey;
              }), param);
}

function timeUp(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.timeUp;
              }), param);
}

function timeDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.timeDown;
              }), param);
}

function metaKey(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.metaKey;
              }), param);
}

function altKey(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.altKey;
              }), param);
}

function ctrlKey(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.ctrlKey;
              }), param);
}

function enabled(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.enabled;
              }), param);
}

function repeats(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.repeats;
              }), param);
}

var include = Events$ReVerv.EventEmitter(/* module */[]);

var Keys_013 = /* PEEmitter */include[0];

var Keys_014 = /* emit0 */include[1];

var Keys_015 = /* emit1 */include[2];

var Keys_016 = /* emit2 */include[3];

var Keys_017 = /* destroy */include[4];

var Keys_018 = /* shutdown */include[5];

var Keys_019 = /* eventNames */include[6];

var Keys_020 = /* offStr */include[7];

var Keys_021 = /* addEventListener */include[8];

var Keys_022 = /* on */include[9];

var Keys_023 = /* off */include[10];

var Keys_024 = /* listeners */include[11];

var Keys_025 = /* removeAllListeners */include[12];

var Keys_026 = /* removeAllListenersStr */include[13];

var Keys_027 = /* removeListenerStr */include[14];

var Keys = /* module */[
  /* PKey */0,
  /* isUp */isUp,
  /* isDown */isDown,
  /* keyCode */keyCode,
  /* location */$$location,
  /* shiftKey */shiftKey,
  /* timeUp */timeUp,
  /* timeDown */timeDown,
  /* metaKey */metaKey,
  /* altKey */altKey,
  /* ctrlKey */ctrlKey,
  /* enabled */enabled,
  /* repeats */repeats,
  Keys_013,
  Keys_014,
  Keys_015,
  Keys_016,
  Keys_017,
  Keys_018,
  Keys_019,
  Keys_020,
  Keys_021,
  Keys_022,
  Keys_023,
  Keys_024,
  Keys_025,
  Keys_026,
  Keys_027
];

function active(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.active;
              }), param);
}

function angle(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.angle;
              }), param);
}

function angleF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.angle;
              }), param);
}

function button(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.button;
              }), param);
}

function buttons(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.buttons;
              }), param);
}

function camera(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.camera;
              }), param);
}

function deltaX(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deltaX;
              }), param);
}

function deltaXF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deltaX;
              }), param);
}

function deltaY(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deltaY;
              }), param);
}

function deltaYF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deltaY;
              }), param);
}

function deltaZ(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deltaZ;
              }), param);
}

function deltaZF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deltaZ;
              }), param);
}

function distance(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.distance;
              }), param);
}

function id(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.id;
              }), param);
}

function isDown$1(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.isDown;
              }), param);
}

function locked(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.locked;
              }), param);
}

function primaryDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.primaryDown;
              }), param);
}

function upElement(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.upElement;
              }), param);
}

function downElement(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.downElement;
              }), param);
}

function x(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.x;
              }), param);
}

function xF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.x;
              }), param);
}

function y(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.y;
              }), param);
}

function yF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.y;
              }), param);
}

function worldX(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.worldX;
              }), param);
}

function worldXF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.worldX;
              }), param);
}

function worldY(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.worldY;
              }), param);
}

function worldYF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.worldY;
              }), param);
}

function velocity(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.velocity;
              }), param);
}

function wasTouch(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.wasTouch;
              }), param);
}

function wasCancelled(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.wasCancelled;
              }), param);
}

function time(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.time;
              }), param);
}

function timeF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.time;
              }), param);
}

function moveTime(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.moveTime;
              }), param);
}

function moveTimeF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.moveTime;
              }), param);
}

function pointerId(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.pointerId;
              }), param);
}

function getDistance(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDistance();
              }), param);
}

function getDistanceF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDistance();
              }), param);
}

function getDistanceX(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDistanceX();
              }), param);
}

function getDistanceXF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDistanceX();
              }), param);
}

function getDistanceY(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDistanceY();
              }), param);
}

function getDistanceYF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDistanceY();
              }), param);
}

function destroy(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                prim.destroy();
                return /* () */0;
              }), param);
}

function backButtonReleased(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.backbuttonReleased();
              }), param);
}

function backButtonDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.backButtonDown();
              }), param);
}

function forwardButtonDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.forwardButtonDown();
              }), param);
}

function forwardButtonReleased(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.forwardButtonReleased();
              }), param);
}

function noButtonDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.noButtonDown();
              }), param);
}

function rightButtonDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.rightButtonDown();
              }), param);
}

function rightButtonReleased(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.rightButtonReleased();
              }), param);
}

function middleButtonDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.middleButtonDown();
              }), param);
}

function middleButtonReleased(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.middleButtonReleased();
              }), param);
}

function getDuration(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDuration();
              }), param);
}

function getDurationF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDuration();
              }), param);
}

function getAngle(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getAngle();
              }), param);
}

function getAngleF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getAngle();
              }), param);
}

var Pointer = /* module */[
  /* PPointer */0,
  /* active */active,
  /* angle */angle,
  /* angleF */angleF,
  /* button */button,
  /* buttons */buttons,
  /* camera */camera,
  /* deltaX */deltaX,
  /* deltaXF */deltaXF,
  /* deltaY */deltaY,
  /* deltaYF */deltaYF,
  /* deltaZ */deltaZ,
  /* deltaZF */deltaZF,
  /* distance */distance,
  /* id */id,
  /* isDown */isDown$1,
  /* locked */locked,
  /* primaryDown */primaryDown,
  /* upElement */upElement,
  /* downElement */downElement,
  /* x */x,
  /* xF */xF,
  /* y */y,
  /* yF */yF,
  /* worldX */worldX,
  /* worldXF */worldXF,
  /* worldY */worldY,
  /* worldYF */worldYF,
  /* velocity */velocity,
  /* wasTouch */wasTouch,
  /* wasCancelled */wasCancelled,
  /* time */time,
  /* timeF */timeF,
  /* moveTime */moveTime,
  /* moveTimeF */moveTimeF,
  /* pointerId */pointerId,
  /* getDistance */getDistance,
  /* getDistanceF */getDistanceF,
  /* getDistanceX */getDistanceX,
  /* getDistanceXF */getDistanceXF,
  /* getDistanceY */getDistanceY,
  /* getDistanceYF */getDistanceYF,
  /* destroy */destroy,
  /* backButtonReleased */backButtonReleased,
  /* backButtonDown */backButtonDown,
  /* forwardButtonDown */forwardButtonDown,
  /* forwardButtonReleased */forwardButtonReleased,
  /* noButtonDown */noButtonDown,
  /* rightButtonDown */rightButtonDown,
  /* rightButtonReleased */rightButtonReleased,
  /* middleButtonDown */middleButtonDown,
  /* middleButtonReleased */middleButtonReleased,
  /* getDuration */getDuration,
  /* getDurationF */getDurationF,
  /* getAngle */getAngle,
  /* getAngleF */getAngleF
];

var Mouse = /* module */[];

exports.Keys = Keys;
exports.Pointer = Pointer;
exports.Mouse = Mouse;
/* include Not a pure module */
