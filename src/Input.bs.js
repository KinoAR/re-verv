// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var VBase$ReVerv = require("./VBase.bs.js");
var Events$ReVerv = require("./Events.bs.js");

function isUp(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.isUp;
              }), param);
}

function isDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.isDown;
              }), param);
}

function keyCode(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.keyCode;
              }), param);
}

function $$location(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.location;
              }), param);
}

function shiftKey(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.shiftKey;
              }), param);
}

function timeUp(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.timeUp;
              }), param);
}

function timeDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.timeDown;
              }), param);
}

function metaKey(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.metaKey;
              }), param);
}

function altKey(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.altKey;
              }), param);
}

function ctrlKey(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.ctrlKey;
              }), param);
}

function enabled(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.enabled;
              }), param);
}

function repeats(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.repeats;
              }), param);
}

var include = Events$ReVerv.EventEmitter(/* module */[]);

var Keys_013 = /* PEEmitter */include[0];

var Keys_014 = /* emit0 */include[1];

var Keys_015 = /* emit1 */include[2];

var Keys_016 = /* emit2 */include[3];

var Keys_017 = /* destroy */include[4];

var Keys_018 = /* shutdown */include[5];

var Keys_019 = /* eventNames */include[6];

var Keys_020 = /* offStr */include[7];

var Keys_021 = /* addEventListener */include[8];

var Keys_022 = /* on */include[9];

var Keys_023 = /* off */include[10];

var Keys_024 = /* listeners */include[11];

var Keys_025 = /* removeAllListeners */include[12];

var Keys_026 = /* removeAllListenersStr */include[13];

var Keys_027 = /* removeListenerStr */include[14];

var Keys = /* module */[
  /* PKey */0,
  /* isUp */isUp,
  /* isDown */isDown,
  /* keyCode */keyCode,
  /* location */$$location,
  /* shiftKey */shiftKey,
  /* timeUp */timeUp,
  /* timeDown */timeDown,
  /* metaKey */metaKey,
  /* altKey */altKey,
  /* ctrlKey */ctrlKey,
  /* enabled */enabled,
  /* repeats */repeats,
  Keys_013,
  Keys_014,
  Keys_015,
  Keys_016,
  Keys_017,
  Keys_018,
  Keys_019,
  Keys_020,
  Keys_021,
  Keys_022,
  Keys_023,
  Keys_024,
  Keys_025,
  Keys_026,
  Keys_027
];

function active(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.active;
              }), param);
}

function angle(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.angle;
              }), param);
}

function angleF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.angle;
              }), param);
}

function button(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.button;
              }), param);
}

function buttons(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.buttons;
              }), param);
}

function camera(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.camera;
              }), param);
}

function deltaX(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deltaX;
              }), param);
}

function deltaXF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deltaX;
              }), param);
}

function deltaY(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deltaY;
              }), param);
}

function deltaYF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deltaY;
              }), param);
}

function deltaZ(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deltaZ;
              }), param);
}

function deltaZF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deltaZ;
              }), param);
}

function distance(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.distance;
              }), param);
}

function id(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.id;
              }), param);
}

function isDown$1(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.isDown;
              }), param);
}

function locked(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.locked;
              }), param);
}

function primaryDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.primaryDown;
              }), param);
}

function upElement(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.upElement;
              }), param);
}

function downElement(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.downElement;
              }), param);
}

function x(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.x;
              }), param);
}

function xF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.x;
              }), param);
}

function y(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.y;
              }), param);
}

function yF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.y;
              }), param);
}

function worldX(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.worldX;
              }), param);
}

function worldXF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.worldX;
              }), param);
}

function worldY(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.worldY;
              }), param);
}

function worldYF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.worldY;
              }), param);
}

function velocity(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.velocity;
              }), param);
}

function wasTouch(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.wasTouch;
              }), param);
}

function wasCancelled(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.wasCancelled;
              }), param);
}

function time(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.time;
              }), param);
}

function timeF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.time;
              }), param);
}

function moveTime(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.moveTime;
              }), param);
}

function moveTimeF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.moveTime;
              }), param);
}

function pointerId(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.pointerId;
              }), param);
}

function mouseEvent(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.event;
              }), param);
}

function touchEvent(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.event;
              }), param);
}

function getDistance(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDistance();
              }), param);
}

function getDistanceF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDistance();
              }), param);
}

function getDistanceX(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDistanceX();
              }), param);
}

function getDistanceXF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDistanceX();
              }), param);
}

function getDistanceY(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDistanceY();
              }), param);
}

function getDistanceYF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDistanceY();
              }), param);
}

function destroy(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                prim.destroy();
                return /* () */0;
              }), param);
}

function backButtonReleased(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.backbuttonReleased();
              }), param);
}

function backButtonDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.backButtonDown();
              }), param);
}

function forwardButtonDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.forwardButtonDown();
              }), param);
}

function forwardButtonReleased(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.forwardButtonReleased();
              }), param);
}

function noButtonDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.noButtonDown();
              }), param);
}

function rightButtonDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.rightButtonDown();
              }), param);
}

function rightButtonReleased(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.rightButtonReleased();
              }), param);
}

function middleButtonDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.middleButtonDown();
              }), param);
}

function middleButtonReleased(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.middleButtonReleased();
              }), param);
}

function getDuration(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDuration();
              }), param);
}

function getDurationF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getDuration();
              }), param);
}

function getAngle(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getAngle();
              }), param);
}

function getAngleF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.getAngle();
              }), param);
}

function updateWorldPoint(camera) {
  return (function (param) {
      return VBase$ReVerv.map((function (__x) {
                    return __x.updateWorldPoint(camera);
                  }), param);
    });
}

var Pointer = /* module */[
  /* PPointer */0,
  /* active */active,
  /* angle */angle,
  /* angleF */angleF,
  /* button */button,
  /* buttons */buttons,
  /* camera */camera,
  /* deltaX */deltaX,
  /* deltaXF */deltaXF,
  /* deltaY */deltaY,
  /* deltaYF */deltaYF,
  /* deltaZ */deltaZ,
  /* deltaZF */deltaZF,
  /* distance */distance,
  /* id */id,
  /* isDown */isDown$1,
  /* locked */locked,
  /* primaryDown */primaryDown,
  /* upElement */upElement,
  /* downElement */downElement,
  /* x */x,
  /* xF */xF,
  /* y */y,
  /* yF */yF,
  /* worldX */worldX,
  /* worldXF */worldXF,
  /* worldY */worldY,
  /* worldYF */worldYF,
  /* velocity */velocity,
  /* wasTouch */wasTouch,
  /* wasCancelled */wasCancelled,
  /* time */time,
  /* timeF */timeF,
  /* moveTime */moveTime,
  /* moveTimeF */moveTimeF,
  /* pointerId */pointerId,
  /* mouseEvent */mouseEvent,
  /* touchEvent */touchEvent,
  /* getDistance */getDistance,
  /* getDistanceF */getDistanceF,
  /* getDistanceX */getDistanceX,
  /* getDistanceXF */getDistanceXF,
  /* getDistanceY */getDistanceY,
  /* getDistanceYF */getDistanceYF,
  /* destroy */destroy,
  /* backButtonReleased */backButtonReleased,
  /* backButtonDown */backButtonDown,
  /* forwardButtonDown */forwardButtonDown,
  /* forwardButtonReleased */forwardButtonReleased,
  /* noButtonDown */noButtonDown,
  /* rightButtonDown */rightButtonDown,
  /* rightButtonReleased */rightButtonReleased,
  /* middleButtonDown */middleButtonDown,
  /* middleButtonReleased */middleButtonReleased,
  /* getDuration */getDuration,
  /* getDurationF */getDurationF,
  /* getAngle */getAngle,
  /* getAngleF */getAngleF,
  /* updateWorldPoint */updateWorldPoint
];

var Mouse = /* module */[];

function a(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.A;
              }), param);
}

function b(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.B;
              }), param);
}

function c(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.C;
              }), param);
}

function backSlash(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.BACK_SLASH;
              }), param);
}

function alt(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.ALT;
              }), param);
}

function backSpace(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.BACKSPACE;
              }), param);
}

function colon(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.COLON;
              }), param);
}

function backTick(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.BACKTICK;
              }), param);
}

function comma(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.COMMA;
              }), param);
}

function commaFireFox(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.COMMA_FIREFOX;
              }), param);
}

function commaFireFoxWindows(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.COMMA_FIREFOX_WINDOWS;
              }), param);
}

function ctrl(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.CTRL;
              }), param);
}

function d(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.D;
              }), param);
}

function $$delete(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.DELETE;
              }), param);
}

function down(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.DOWN;
              }), param);
}

function e(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.E;
              }), param);
}

function eight(prim) {
  return prim.EIGHT;
}

function end_(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.END;
              }), param);
}

function enter(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.ENTER;
              }), param);
}

function esc(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.ESC;
              }), param);
}

function f(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F;
              }), param);
}

function f1(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F1;
              }), param);
}

function f2(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F2;
              }), param);
}

function f3(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F3;
              }), param);
}

function f4(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F4;
              }), param);
}

function f5(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F5;
              }), param);
}

function f6(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F6;
              }), param);
}

function f7(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F7;
              }), param);
}

function f8(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F8;
              }), param);
}

function f9(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F9;
              }), param);
}

function f10(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F10;
              }), param);
}

function f11(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F11;
              }), param);
}

function f12(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.F12;
              }), param);
}

function five(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.FIVE;
              }), param);
}

function forwardSlash(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.FORWARD_SLASH;
              }), param);
}

function four(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.FOUR;
              }), param);
}

function g(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.G;
              }), param);
}

function h(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.H;
              }), param);
}

function home(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.HOME;
              }), param);
}

function i(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.I;
              }), param);
}

function insert(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.INSERT;
              }), param);
}

function j(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.J;
              }), param);
}

function k(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.K;
              }), param);
}

function l(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.L;
              }), param);
}

function left(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.LEFT;
              }), param);
}

function m(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.M;
              }), param);
}

function minus(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.MINUS;
              }), param);
}

function n(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.N;
              }), param);
}

function nine(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.NINE;
              }), param);
}

function numPadEight(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.NUMPAD_EIGHT;
              }), param);
}

function numpadFive(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.NUMPAD_FIVE;
              }), param);
}

function numpadFour(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.NUMPAD_FOUR;
              }), param);
}

function numpadNine(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.NUMPAD_NINE;
              }), param);
}

function numpadOne(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.NUMPAD_ONE;
              }), param);
}

function numpadSeven(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.NUMPAD_SEVEN;
              }), param);
}

function numpadSix(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.NUMPAD_SIX;
              }), param);
}

function numpadThree(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.NUMPAD_THREE;
              }), param);
}

function numpadTwo(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.NUMPAD_TWO;
              }), param);
}

function numpadZero(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.NUMPAD_ZERO;
              }), param);
}

function p(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.P;
              }), param);
}

function pageDown(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.PAGE_DOWN;
              }), param);
}

function pageUp(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.PAGE_UP;
              }), param);
}

function pause(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.PAUSE;
              }), param);
}

function period(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.PERIOD;
              }), param);
}

function plus(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.PLUS;
              }), param);
}

function printScreen(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.PRINT_SCREEN;
              }), param);
}

function q(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.Q;
              }), param);
}

function quotes(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.QUOTES;
              }), param);
}

function r(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.R;
              }), param);
}

function right(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.RIGHT;
              }), param);
}

function s(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.S;
              }), param);
}

function semicolon(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.SEMICOLON;
              }), param);
}

function semicolonFFox(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.SEMICLON_FIREFOX;
              }), param);
}

function seven(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.SEVEN;
              }), param);
}

function shift(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.SHIFT;
              }), param);
}

function six(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.SIX;
              }), param);
}

function space(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.SPACE;
              }), param);
}

function t(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.T;
              }), param);
}

function tab(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.TAB;
              }), param);
}

function three(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.THREE;
              }), param);
}

function two(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.TWO;
              }), param);
}

function u(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.U;
              }), param);
}

function up(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.UP;
              }), param);
}

function v(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.V;
              }), param);
}

function w(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.W;
              }), param);
}

function x$1(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.X;
              }), param);
}

function y$1(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.Y;
              }), param);
}

function zero(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.ZERO;
              }), param);
}

var KeyCodes = /* module */[
  /* PKeyCodes */0,
  /* a */a,
  /* b */b,
  /* c */c,
  /* backSlash */backSlash,
  /* alt */alt,
  /* backSpace */backSpace,
  /* colon */colon,
  /* backTick */backTick,
  /* comma */comma,
  /* commaFireFox */commaFireFox,
  /* commaFireFoxWindows */commaFireFoxWindows,
  /* ctrl */ctrl,
  /* d */d,
  /* delete */$$delete,
  /* down */down,
  /* e */e,
  /* eight */eight,
  /* end_ */end_,
  /* enter */enter,
  /* esc */esc,
  /* f */f,
  /* f1 */f1,
  /* f2 */f2,
  /* f3 */f3,
  /* f4 */f4,
  /* f5 */f5,
  /* f6 */f6,
  /* f7 */f7,
  /* f8 */f8,
  /* f9 */f9,
  /* f10 */f10,
  /* f11 */f11,
  /* f12 */f12,
  /* five */five,
  /* forwardSlash */forwardSlash,
  /* four */four,
  /* g */g,
  /* h */h,
  /* home */home,
  /* i */i,
  /* insert */insert,
  /* j */j,
  /* k */k,
  /* l */l,
  /* left */left,
  /* m */m,
  /* minus */minus,
  /* n */n,
  /* nine */nine,
  /* numPadEight */numPadEight,
  /* numpadFive */numpadFive,
  /* numpadFour */numpadFour,
  /* numpadNine */numpadNine,
  /* numpadOne */numpadOne,
  /* numpadSeven */numpadSeven,
  /* numpadSix */numpadSix,
  /* numpadThree */numpadThree,
  /* numpadTwo */numpadTwo,
  /* numpadZero */numpadZero,
  /* p */p,
  /* pageDown */pageDown,
  /* pageUp */pageUp,
  /* pause */pause,
  /* period */period,
  /* plus */plus,
  /* printScreen */printScreen,
  /* q */q,
  /* quotes */quotes,
  /* r */r,
  /* right */right,
  /* s */s,
  /* semicolon */semicolon,
  /* semicolonFFox */semicolonFFox,
  /* seven */seven,
  /* shift */shift,
  /* six */six,
  /* space */space,
  /* t */t,
  /* tab */tab,
  /* three */three,
  /* two */two,
  /* u */u,
  /* up */up,
  /* v */v,
  /* w */w,
  /* x */x$1,
  /* y */y$1,
  /* zero */zero
];

function current(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.current;
              }), param);
}

function deleteOnMatch(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.deleteOnMatch;
              }), param);
}

function enabled$1(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.enabled;
              }), param);
}

function index(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.index;
              }), param);
}

function keyCodes(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.keyCodes;
              }), param);
}

function matched(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.matched;
              }), param);
}

function maxKeyDelay(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.maxKeyDelay;
              }), param);
}

function resetOnMatch(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.resetOnMatch;
              }), param);
}

function resetOnWrongKey(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.resetOnWrongKey;
              }), param);
}

function size(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.size;
              }), param);
}

function sizeF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.size;
              }), param);
}

function timeLastMatched(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.timeLastMatched;
              }), param);
}

function timeLastMatchedF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.timeLastMatched;
              }), param);
}

function timeMatched(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.timeMatched;
              }), param);
}

function timeMatchedF(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.timeMatched;
              }), param);
}

function progress(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                return prim.progress;
              }), param);
}

function destroy$1(param) {
  return VBase$ReVerv.flatMap((function (prim) {
                prim.destroy();
                return /* () */0;
              }), param);
}

var KeyCombo = /* module */[
  /* PKeyCombo */0,
  /* current */current,
  /* deleteOnMatch */deleteOnMatch,
  /* enabled */enabled$1,
  /* index */index,
  /* keyCodes */keyCodes,
  /* matched */matched,
  /* maxKeyDelay */maxKeyDelay,
  /* resetOnMatch */resetOnMatch,
  /* resetOnWrongKey */resetOnWrongKey,
  /* size */size,
  /* sizeF */sizeF,
  /* timeLastMatched */timeLastMatched,
  /* timeLastMatchedF */timeLastMatchedF,
  /* timeMatched */timeMatched,
  /* timeMatchedF */timeMatchedF,
  /* progress */progress,
  /* destroy */destroy$1
];

exports.Keys = Keys;
exports.Pointer = Pointer;
exports.Mouse = Mouse;
exports.KeyCodes = KeyCodes;
exports.KeyCombo = KeyCombo;
/* include Not a pure module */
